{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM to be created"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "VM Size for creating the Virtual Machine"
      }
    },
    "BoomiAuthenticationType": {
        "defaultValue": "Token",
        "allowedValues": [
          "Token",
          "Password"
        ],
        "type": "string",
        "metadata": {
          "description": "Boomi Platform Authentication Type"
        }
      },
    "user": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "AtomSphere username"
      }
    },
    "password": {
      "type": "securestring",
       "defaultValue": "",
      "metadata": {
        "description": "AtomSphere password"
      }
    },
     "BoomiMFAAPIToken": {
        "defaultValue": "",
        "type": "securestring",
        "metadata": {
          "description": "An MFA API token generated by your Dell Boomi Administrator."
        }
      },
    "accountId": {
      "type": "string",
      "metadata": {
        "description": "AtomSphere Account ID"
      }
    },
    "atomName": {
      "type": "string",
      "metadata": {
        "description": "Atom Name"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location"
      }
    },
    "baseUrl": {
      "type" : "string",
      "metadata" : {
        "description": "The base Url for dependent assets",
        "artifactsBaseUrl": ""
      },
      "defaultValue" : "https://raw.githubusercontent.com/OfficialBoomi/azure-atom-quickstart/Development/atom/"
    }
  },
  "variables": {
    "apiVersion":"2015-06-15",
    "safeAtomName": "[replace(replace(toLower(parameters('atomName')), '-',''),'.','')]",
    "safeAtomNameWithResourceGroupId": "[replace(replace(toLower(concat(parameters('atomName'), uniqueString(resourceGroup().id))), '-',''),'.','')]",
    "vmExtensionName": "DellBoomiAtom",
    "storageAccountType": "Premium_LRS",
    "virtualNetworkName": "[concat('vnet-', take(variables('safeAtomNameWithResourceGroupId'), 19))]",
    "vnetAddressPrefix": "192.168.255.0/24",
    "subnetName": "[concat('subnet-', take(variables('safeAtomNameWithResourceGroupId'), 17))]",
    "subnetPrefix": "192.168.255.0/24",
    "nicName": "[concat('nic-', take(variables('safeAtomNameWithResourceGroupId'), 20))]",
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),'/subnets/', variables('subnetName'))]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "imageSKU": "2012-R2-Datacenter",
    "storageAccountName": "[take(variables('safeAtomNameWithResourceGroupId'), 24)]",
    "directory": "C:\\"
  },
  "resources": [
      {
      "name": "BoomiLicenseValidation",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/OfficialBoomi/azure-atom-quickstart/Development/atom/azuredeploy.license.validation.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "BoomiAuthenticationType": {
            "value": "[parameters('BoomiAuthenticationType')]"
          },
          "BoomiAccountID": {
            "value": "[parameters('accountId')]"
          },
          "BoomiUsername": {
            "value": "[parameters('user')]"
          },
          "BoomiMFAAPIToken": {
            "value": "[parameters('BoomiMFAAPIToken')]"
          },
          "BoomiPassword": {
            "value": "[parameters('Password')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-12-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/','osdisk.vhd')]"
            },
            "caching": "None",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/', variables('vmExtensionName'))]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "fileUris": [
            "[concat(parameters('baseUrl'),'/atom_install64.ps1')]"
          ]
        },
        "protectedSettings": {
        "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File atom_install64.ps1 -BoomiAuthenticationType \"', parameters('BoomiAuthenticationType'), '\" -User \"', parameters('user'), '\" -Password \"', parameters('password'), '\" -installToken \"', reference('BoomiLicenseValidation').outputs.installationToken.value, '\" -AtomName \"', parameters('atomName'), '\" -AccountId \"', parameters('accountId'), '\" -AtomDirectory ', variables('directory'))]"
        }
      }
    }
  ],
  "outputs": {
    "licenseValidation": {
      "type": "string",
      "value": "[reference('BoomiLicenseValidation').outputs.licenseValidation.value]"
    }
  }
}
